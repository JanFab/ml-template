image: python:3.9

variables:
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE
  DOCKER_TAG: $CI_COMMIT_REF_SLUG

stages:
  - test
  - lint
  - build
  - deploy

test:
  stage: test
  script:
    - pip install --upgrade pip
    - pip install .
    - pip install pytest pytest-cov
    - pytest tests/ --cov=src/ --cov-report=xml
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

lint:
  stage: lint
  script:
    - pip install black isort flake8
    - black . --check
    - isort . --check-only
    - flake8 .

build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG -f containers/api/Dockerfile .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
    - |
      if [ "$CI_COMMIT_BRANCH" = "main" ]; then
        docker tag $DOCKER_IMAGE:$DOCKER_TAG $DOCKER_IMAGE:latest
        docker push $DOCKER_IMAGE:latest
      fi
  only:
    - main
    - tags

deploy-dev:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - kubectl config use-context $KUBE_CONTEXT_DEV
    - kustomize build k8s/overlays/development | kubectl apply -f -
  environment:
    name: development
  only:
    - main

deploy-prod:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - kubectl config use-context $KUBE_CONTEXT_PROD
    - kustomize build k8s/overlays/production | kubectl apply -f -
  environment:
    name: production
  only:
    - tags
  when: manual 